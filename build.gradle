buildscript {
    repositories {
        if (System.getenv('BUILD_SERVER') || System.getProperty('CERN_TECHNET_VM')) {
            maven {
                url 'http://artifactory.cern.ch/repo'
            }
            maven {
                url 'http://artifactory.cern.ch/jcenter'
            }
        } else {
            mavenCentral()
            jcenter()
        }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.9.0"
    }
}

repositories {
    if (System.getenv('BUILD_SERVER') || System.getProperty('CERN_TECHNET_VM')) {
        maven {
            url 'http://artifactory.cern.ch/repo'
        }
        maven {
            url 'http://artifactory.cern.ch/jcenter'
        }
    } else {
        mavenCentral()
        jcenter()
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'jacoco'

if (System.getenv('TRAVIS')) {
    apply plugin: 'io.codearte.nexus-staging'
    apply from: './scripts/deploy.gradle'
}

group 'org.streamingpool'

sourceCompatibility = 1.8

dependencies {
    compile 'org.streamingpool:streamingpool-core:1.+'
    compile 'org.streamingpool:streamingpool-ext-tensorics:1.+'

    compile 'org.springframework:spring-core:4.3.9.RELEASE'
    compile 'org.springframework:spring-context:4.3.9.RELEASE'
    testCompile 'org.springframework:spring-test:4.3.9.RELEASE'

    compile 'org.slf4j:slf4j-api:1.7.+'

    compile 'com.google.guava:guava:22.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.8.+'
    testCompile 'org.assertj:assertj-core:3.8.+'
}

sourceSets {
    main {
        java { srcDir 'src/java' }
    }
    test {
        java { srcDir 'src/test' }
    }
}

javadoc { options.encoding = "UTF-8" }

task wrapper(type: Wrapper) { gradleVersion = '3.5' }

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts { archives javadocJar, sourcesJar }

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled true
        csv.enabled false
    }
}
